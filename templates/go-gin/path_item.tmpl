package api

import "github.com/gin-gonic/gin"

// GENERATED INTERFACE. DO NOT EDIT

type {{ .GetName }} interface {
{{- range $name, $operation := .Operations }}
  {{ $operation.GetName }}(*gin.Context, *{{ $operation.GetName }}Parameters, *{{ $operation.RequestBody.GetName }}) {{ $operation.GetName }}Response
{{- end }}
	InvalidRequest(*gin.Context, error)
}

{{ $pathItemStructName := printf "Unimplemented%s" .GetName -}}
type {{ $pathItemStructName }} struct {}

{{- range $name, $operation := .Operations }}
func (u {{ $pathItemStructName }}) {{ $operation.GetName }}(*gin.Context, *{{ $operation.GetName }}Parameters, *{{ $operation.RequestBody.GetName }}) {{ $operation.GetName }}Response {
	return {{ $operation.GetName }}405Response{}
}
{{- end }}
func (u {{ $pathItemStructName }}) InvalidRequest(c *gin.Context, err error) {
	c.JSON(400, err.Error())
}

func Register{{ .GetName }}Path(e *gin.Engine, srv {{ .GetName }}) {
{{- range $name, $operation := .Operations }}
	{{ $parent := .GetParent }}
  e.{{ $name | ToUpper }}("{{ $parent.GetPath }}", func(c *gin.Context) {
  	params := &{{ $operation.GetName }}Parameters{}
  	body := &{{ $operation.RequestBody.GetName }}{}
		err := c.ShouldBindJSON(body)
		if err != nil {
			srv.InvalidRequest(c, err)
		}
    response := srv.{{ $operation.GetName }}(c, params, body)
    c.JSON(response.GetStatus(), response)
  })
{{- end }}
}

{{- range $name, $operation := .Operations }}
type {{ $operation.GetName }}Response interface {
	GetStatus() int
}

{{- range $name, $response := .Responses }}
{{ $statusCode := $name }}
{{- range $name, $content := $response.Content }}
type {{ $response.GetName }} struct {
	{{ $content.Schema.GetName }}
}
func ({{ $response.GetName }}) GetStatus() int {
	return {{ $statusCode }}
}
{{- end }}
{{- end }}
type {{ $operation.GetName }}405Response struct {}
func ({{ $operation.GetName }}405Response) GetStatus() int {
	return 405
}

type {{ $operation.GetName }}Parameters struct {}

{{- range $name, $requestBody := $operation.RequestBody.Content }}
type {{ $operation.RequestBody.GetName }} {{ $requestBody.Schema.GetName }}
{{- end }}
{{- if not $operation.RequestBody.Content }}
type {{ $operation.RequestBody.GetName }} struct {}
{{- end }}

{{- end }}
